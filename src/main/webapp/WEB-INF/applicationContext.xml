<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN"
	"http://www.springframework.org/dtd/spring-beans.dtd">

<beans>

	<!-- property placeholder post-processor -->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
        	<list>
	        	<value>classpath:jdbc.properties</value>
	        	<value>classpath:applicationContext.properties</value>
        	</list>
		</property>
	</bean>
	
	<!-- wire DAO implementation 2 appropiate
		 service managers -->

    <bean id="userManager" parent="txProxyTemplate">
        <property name="target">
            <bean class="cz.silesnet.service.impl.UserManagerImpl">
                <property name="userDAO"><ref local="userDAO"/></property>
                <property name="historyManager"><ref local="historyManager"/></property>
            </bean>
        </property>
        <property name="transactionAttributes">
            <props>
                <prop key="insert*">PROPAGATION_REQUIRED</prop>
                <prop key="update*">PROPAGATION_REQUIRED</prop>
                <prop key="delete*">PROPAGATION_REQUIRED</prop>
                <prop key="dispatch*">PROPAGATION_REQUIRED</prop>
                <prop key="*">PROPAGATION_REQUIRED,readOnly</prop>
            </props>
        </property>
    </bean>	

    <bean id="labelManager" parent="txProxyTemplate">
        <property name="target">
            <bean class="cz.silesnet.service.impl.LabelManagerImpl">
                <property name="labelDAO"><ref local="labelDAO"/></property>
            </bean>
        </property>
    </bean>	

    <bean id="nodeManager" parent="txProxyTemplate">
        <property name="target">
            <bean class="cz.silesnet.service.impl.NodeManagerImpl">
                <property name="nodeDAO"><ref local="nodeDAO"/></property>
                <property name="historyManager"><ref local="historyManager"/></property>
            </bean>
        </property>
    </bean>	

    <bean id="historyManager" parent="txProxyTemplate">
        <property name="target">
            <bean class="cz.silesnet.service.impl.HistoryManagerImpl">
                <property name="historyItemDAO"><ref local="historyItemDAO"/></property>
                <property name="labelManager"><ref local="labelManager"/></property>
            </bean>
        </property>
        <property name="transactionAttributes">
            <props>
                <prop key="insert*">PROPAGATION_REQUIRED</prop>
                <prop key="update*">PROPAGATION_REQUIRED</prop>
                <prop key="delete*">PROPAGATION_REQUIRED</prop>
                <prop key="clear*">PROPAGATION_REQUIRED</prop>
                <prop key="*">PROPAGATION_REQUIRED,readOnly</prop>
            </props>
        </property>
    </bean>	

    <bean id="customerManager" parent="txProxyTemplate">
        <property name="target">
            <bean class="cz.silesnet.service.impl.CustomerManagerImpl">
                <property name="customerDAO"><ref local="customerDAO"/></property>
                <property name="billDAO"><ref local="billDAO"/></property>
                <property name="serviceDAO"><ref local="serviceDAO"/></property>
                <property name="historyManager"><ref local="historyManager"/></property>
                <property name="settingManager"><ref local="settingManager"/></property>
            </bean>
        </property>
        <property name="transactionAttributes">
            <props>
                <prop key="insert*">PROPAGATION_REQUIRED</prop>
                <prop key="update*">PROPAGATION_REQUIRED</prop>
                <prop key="delete*">PROPAGATION_REQUIRED</prop>
                <prop key="deactivateCandidates">PROPAGATION_REQUIRED</prop>
                <prop key="*">PROPAGATION_REQUIRED,readOnly</prop>
            </props>
        </property>
        
    </bean>	

    <bean id="billingManager" parent="txProxyTemplate">
        <property name="target">
            <bean class="cz.silesnet.service.impl.BillingManagerImpl">
                <property name="billDAO"><ref local="billDAO"/></property>
		        <property name="customerManager"><ref bean="customerManager"/></property>
                <property name="historyManager"><ref local="historyManager"/></property>
                <property name="settingManager"><ref local="settingManager"/></property>
                <property name="mailSender"><ref local="mailSenderProduction"/></property>
                <property name="signedEmailGenerator"><ref local="signedEmailGenerator" /></property>
                <property name="emailFromAddressCs" value="${email.from.cs}" />
                <property name="emailFromAddressPl" value="${email.from.pl}" />
                <property name="emailSendingDelay" value="${email.delay}" />
            </bean>
        </property>
        <property name="transactionAttributes">
            <props>
                <prop key="insert*">PROPAGATION_REQUIRED</prop>
                <prop key="update*">PROPAGATION_REQUIRED</prop>
                <prop key="delete*">PROPAGATION_REQUIRED</prop>
                <prop key="invoice*">PROPAGATION_REQUIRED</prop>
                <prop key="send*">PROPAGATION_REQUIRED</prop>
                <prop key="reSendAll">PROPAGATION_REQUIRED</prop>
                <prop key="export*">PROPAGATION_REQUIRED</prop>
                <prop key="emailAll">PROPAGATION_REQUIRED</prop>
                <prop key="setSendingEnabled">PROPAGATION_REQUIRED</prop>
                <prop key="*">PROPAGATION_REQUIRED,readOnly</prop>
            </props>
        </property>
    </bean>	

    <bean id="settingManager" parent="txProxyTemplate">
        <property name="target">
            <bean class="cz.silesnet.service.impl.SettingManagerImpl">
                <property name="settingDAO"><ref local="settingDAO"/></property>
            </bean>
        </property>
    </bean>	

	<!-- instantiate implementations of DAO interfaces -->

    <bean id="userDAO" class="cz.silesnet.dao.hibernate.UserDAOHibernate">
        <property name="sessionFactory"><ref bean="sessionFactory"/></property>
    </bean>

    <bean id="labelDAO" class="cz.silesnet.dao.hibernate.LabelDAOHibernate">
        <property name="sessionFactory"><ref bean="sessionFactory"/></property>
    </bean>
    
    <bean id="nodeDAO" class="cz.silesnet.dao.hibernate.NodeDAOHibernate">
    	<property name="sessionFactory"><ref bean="sessionFactory"/></property>
    </bean>
    
    <bean id="historyItemDAO" class="cz.silesnet.dao.hibernate.HistoryItemDAOHibernate">
    	<property name="sessionFactory"><ref bean="sessionFactory"/></property>
    </bean>
    
    <bean id="serviceDAO" class="cz.silesnet.dao.hibernate.ServiceDAOHibernate">
    	<property name="sessionFactory"><ref bean="sessionFactory"/></property>
    </bean>

    <bean id="customerDAO" class="cz.silesnet.dao.hibernate.CustomerDAOHibernate">
    	<property name="sessionFactory"><ref bean="sessionFactory"/></property>
    </bean>

    <bean id="billDAO" class="cz.silesnet.dao.hibernate.BillDAOHibernate">
    	<property name="sessionFactory"><ref bean="sessionFactory"/></property>
    </bean>

    <bean id="settingDAO" class="cz.silesnet.dao.hibernate.SettingDAOHibernate">
    	<property name="sessionFactory"><ref bean="sessionFactory"/></property>
    </bean>

	<!-- have messaging in property files available -->
	<!-- TODO set cache to bigger amount of seconds -->
    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basenames">
        	<value>/WEB-INF/i18n/entity-fields,/WEB-INF/i18n/messages,/WEB-INF/i18n/i18n-fields,/WEB-INF/i18n/billing,/WEB-INF/i18n/acegi-security</value></property>
        <property name="cacheSeconds"><value>0</value></property>
        <property name="defaultEncoding"><value>UTF-8</value></property>
        <property name="fallbackToSystemLocale"><value>false</value></property>
    </bean>

	<bean id="messagesUtils" class="cz.silesnet.utils.MessagesUtils" />
	
	<bean id="loginListener" class="cz.silesnet.web.LoginListener">
	    <property name="userManager"><ref local="userManager"/></property>
	</bean>
	
<!-- 
	<bean id="mailSenderProduction" class="cz.silesnet.service.impl.TestMailSender">
		<property name="host"><value>{email.smpt}</value></property>
	</bean>
-->

	<!-- Production mailSender -->
	<bean id="mailSenderProduction" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host"><value>${email.smtp}</value></property>
	</bean>
	
	<!-- configure signed email generator  -->
    <bean id="signedEmailGenerator" class="cz.silesnet.service.impl.SignedEmailGeneratorBC" init-method="configure" >
        <property name="certificatePath" value="${crypto.cert.path}" />
        <property name="privateKeyPath" value="${crypto.pk.path}" />
        <property name="privateKeyAlias" value="${crypto.pk.alias}" />
        <property name="privateKeyPassword" value="${crypto.pk.password}" />
	</bean>
	
	<!-- schedule automatic canditate customers deactivation utilizing Quartz -->

	<bean id="scheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref local="deactivateCandidatesTrigger" />
				<ref local="processSendingQueueTrigger" />
			</list>
		</property>
	</bean>

	<bean id="deactivateCandidatesTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="deactivateCanditatesJobDetail" />
		<property name="cronExpression" value="0 5 0 * * ?"/>
<!-- producion setting, each day 5 minutes past midnight
		<property name="cronExpression" value="0 5 0 * * ?"/>
-->
 	</bean>

	<bean id="deactivateCanditatesJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="customerManager" />
		<property name="targetMethod" value="deactivateCandidates" />
		<property name="concurrent" value="false" />
	</bean>

	<bean id="processSendingQueueTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="processSendingQueueJobDetail" />
		<property name="cronExpression" value="0/20 * * * * ?"/>
	</bean>

	<bean id="processSendingQueueJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="billingManager" />
		<property name="targetMethod" value="sendNextInvoice" />
		<property name="concurrent" value="false" />
	</bean>


</beans>