<beans:beans xmlns="http://www.springframework.org/schema/security"
  xmlns:beans="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security-3.0.xsd">

  <http auto-config="true">
    <intercept-url pattern="/css/**" filters="none" />
    <intercept-url pattern="/img/**" filters="none" />
    <intercept-url pattern="/js/**" filters="none" />
    <intercept-url pattern="/css/**" filters="none" />
    <intercept-url pattern="/favicon.ico" filters="none" />
    <intercept-url pattern="/login.jsp*" filters="none" />
    <intercept-url pattern="/logout.jsp" filters="none" />
    <intercept-url pattern="/index.jsp" filters="none" />
    <intercept-url pattern="/billing/confirmdelivery.html*" filters="none" />
    <intercept-url pattern="/customer/view.html*" access="ROLE_CUST_VIEW,ROLE_ACCOUNTING" requires-channel="https"/>
    <intercept-url pattern="/customer/edit.html*" access="ROLE_ACCOUNTING" requires-channel="https"/>
    <intercept-url pattern="/service/view.html*" access="ROLE_CUST_VIEW,ROLE_ACCOUNTING" requires-channel="https"/>
    <intercept-url pattern="/service/edit.html*" access="ROLE_ACCOUNTING" requires-channel="https"/>
    <intercept-url pattern="/billing/*" access="ROLE_ACCOUNTING" requires-channel="https"/>
    <intercept-url pattern="/**" access="ROLE_USER" requires-channel="https" />
    <form-login login-page="/login.jsp" />
  </http>

  <authentication-manager>
    <authentication-provider ref="daoAuthenticationProviderDB" />
  </authentication-manager>

  <beans:bean id="daoAuthenticationProviderDB" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
    <beans:property name="userDetailsService">
      <beans:ref bean="userDAO" />
    </beans:property>
    <beans:property name="userCache">
      <beans:ref local="userCache" />
    </beans:property>
    <beans:property name="passwordEncoder">
      <beans:ref local="passwordEncoder" />
    </beans:property>
  </beans:bean>

  <!-- userCache -->
  <beans:bean id="userCache" class="org.springframework.security.core.userdetails.cache.EhCacheBasedUserCache">
    <beans:property name="cache">
      <beans:ref local="userCacheBackend" />
    </beans:property>
  </beans:bean>

  <beans:bean id="userCacheBackend" class="org.springframework.cache.ehcache.EhCacheFactoryBean">
    <beans:property name="cacheManager">
      <beans:ref local="cacheManager" />
    </beans:property>
    <beans:property name="cacheName">
      <beans:value>userCache</beans:value>
    </beans:property>
  </beans:bean>

  <beans:bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
    <beans:property name="configLocation">
      <beans:value>classpath:ehcache-failsafe.xml</beans:value>
    </beans:property>
  </beans:bean>

  <!-- can use PlaintextPasswordEncoder instead of ShaPasswordEncoder -->
  <beans:bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.ShaPasswordEncoder" />

  <beans:bean id="loginListener" class="cz.silesnet.web.LoginListener">
    <beans:property name="userManager">
      <beans:ref bean="userManager" />
    </beans:property>
  </beans:bean>

</beans:beans>