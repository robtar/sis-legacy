<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/j2ee"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd" version="2.4">

	<servlet>
		<servlet-name>sis</servlet-name>
		<servlet-class>
			org.springframework.web.servlet.DispatcherServlet
		</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>
	
	<servlet-mapping>
		<servlet-name>sis</servlet-name>
		<url-pattern>*.html</url-pattern>
	</servlet-mapping>
	
	<servlet-mapping>
		<servlet-name>sis</servlet-name>
		<url-pattern>*.cwd</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>sis</servlet-name>
		<url-pattern>*.xml</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>sis</servlet-name>
		<url-pattern>*.bwd</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>sis</servlet-name>
		<url-pattern>*.epp</url-pattern>
	</servlet-mapping>


	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
		<welcome-file>index.jsp</welcome-file>
		<welcome-file>index.php</welcome-file>
	</welcome-file-list>
	
	<!-- include Spring applicationContext -->
	<context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>/WEB-INF/applicationContext*.xml</param-value>
    </context-param>
	
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    
    <listener>
    	<listener-class>org.acegisecurity.ui.session.HttpSessionEventPublisher</listener-class>
    </listener>
    
	<!-- This filter needs to be first!!! before request.getReader() is invoked -->
	<filter>
		<filter-name>Character Encoding Filter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
           <param-name>encoding</param-name>
           <param-value>UTF-8</param-value>
		</init-param>
		<init-param>
           <param-name>forceEncoding</param-name>
           <param-value>true</param-value>
		</init-param>
	</filter>

	<!-- Acegi Filter Chain Proxy introducing security filters -->
    <filter>
    	<filter-name>Acegi Filter Chain Proxy</filter-name>
		<filter-class>org.acegisecurity.util.FilterToBeanProxy</filter-class>
		<init-param>
			<param-name>targetClass</param-name>
			<param-value>org.acegisecurity.util.FilterChainProxy</param-value>
		</init-param>
    </filter>

	<filter>
		<filter-name>Message Filter</filter-name>
		<filter-class>cz.silesnet.web.servlet.MessageFilter</filter-class>
	</filter>
	
	<filter>
		<filter-name>View Filter Filter</filter-name>
		<filter-class>cz.silesnet.web.servlet.ViewFilterFilter</filter-class>
	</filter>
	
	<filter>
		<filter-name>Navigation Filter</filter-name>
		<filter-class>cz.silesnet.web.servlet.NavigationFilter</filter-class>
	</filter>

<!-- This is needed for support Hibernate lazy in .jsp view
    <filter>
    	<filter-name>Open Session In View Filter</filter-name>
		<filter-class>org.springframework.orm.hibernate3.support.OpenSessionInViewFilter</filter-class>
		<init-param>
			<param-name>sessionFactoryBeanName</param-name>
			<param-value>sessionFactory</param-value>
		</init-param>
    </filter>

	<filter-mapping>
		<filter-name>Open Session In View Filter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
-->
    <filter-mapping>
    	<filter-name>Character Encoding Filter</filter-name>
    	<url-pattern>/*</url-pattern>
    </filter-mapping>

	<filter-mapping>
    	<filter-name>Acegi Filter Chain Proxy</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

    <filter-mapping>
		<filter-name>Message Filter</filter-name>
		<url-pattern>/*</url-pattern>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>FORWARD</dispatcher>
    </filter-mapping>

    <filter-mapping>
		<filter-name>View Filter Filter</filter-name>
		<url-pattern>*.html</url-pattern>
    </filter-mapping>
    
    <filter-mapping>
    	<filter-name>Navigation Filter</filter-name>
    	<url-pattern>*.html</url-pattern>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>FORWARD</dispatcher>
    </filter-mapping>

    <error-page>
        <error-code>404</error-code>
        <location>/404.jsp</location>
    </error-page>

    <error-page>
        <error-code>403</error-code>
        <location>/403.jsp</location>
    </error-page>

    <error-page>
        <error-code>500</error-code>
        <location>/500.jsp</location>
    </error-page>
    
    <!-- PHP support via CGI -->
    <servlet>
    	<servlet-name>PhpServlet</servlet-name>
    	<servlet-class>de.herberlin.phpservlet.PhpServlet</servlet-class>
    	<init-param>
    		<param-name>php.executable</param-name>
    		<param-value>/usr/bin/php4</param-value>
    	</init-param>
    	<init-param>
    		<param-name>php.use.multipart.formdata</param-name>
    		<param-value>true</param-value>
    	</init-param>
		<!-- for widows php testing
    		<param-value>W:/testing/java/php-5.0.5/php-cgi.exe</param-value>
		-->
		
		<!-- 
		Seems that PHP 4.3 on Win32 needs this environment variable
		to connect to MySql. Uncomment this if you have problems with 
		php and mysql on windows. (set to: c:/winnt/ if needed.)
		<init-param>
        	<param-name>SystemRoot</param-name>
        	<param-value>c:/windows/</param-value>
    	</init-param>
		-->
		
		<!-- 
		Any servlet parameter that does not start with "php" is passed
		to php as environment variable. If the value is a Java-System-Property,
		the value of this property is given to php; else the value string as is is
		passed to php.
		The example shows how to pass the PATH - environment variable to php. PATH is
		stored in the Java-System-Variable "java.library.path". 
   		<init-param>
        	<param-name>PATH</param-name>
        	<param-value>java.library.path</param-value>
    	</init-param>
		-->
    </servlet>
	
	<servlet-mapping>
		<servlet-name>PhpServlet</servlet-name>
		<url-pattern>*.php</url-pattern>
	</servlet-mapping>

</web-app>